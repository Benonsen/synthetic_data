####################################
# GLOBAL PARAMETERS                #
####################################

global_parameters:
  random_seed: 123
  chromosome: 1 # "all" or a number from 1 to 22
  superpopulation: EUR # "none" or a specific superpopulation (AFR, AMR, EAS, EUR, SAS)


####################################
# FILEPATHS                        #
####################################

# - the chromosome number can be given as a wildcard by specifying {chromosome} in the filepath
# - the superpopulation can be given as a wildcard by specifying {superpopulation} in the filepath
filepaths:
  general:
    output_dir: data/outputs/test
    output_prefix: test{chromosome}
  genotype:
    vcf_input_raw: data/inputs/raw/1KGPhase3.chr{chromosome}.vcf.gz
    vcf_input_processed: data/inputs/processed/1KGPhase3.chr{chromosome}.hapmap.recode.vcf
    vcf_metadata: data/inputs/processed/1KGPhase3.chr{chromosome}.metadata
    popfile_raw: data/inputs/raw/1KGPhase3.pop.panel
    popfile_processed: data/inputs/processed/1KGPhase3.pop.panel
    variant_list: data/inputs/processed/hapmap_variant_list_chr{chromosome}.txt
    genetic_mapfile: data/inputs/raw/genetic_maps/chr{chromosome}.interpolated_genetic_map
    genetic_distfile: data/inputs/processed/1KGPhase3.chr{chromosome}.hapmap.distfile
    hap1_matrix: data/inputs/processed/1KGPhase3.chr{chromosome}.hapmap.h1
    hap2_matrix: data/inputs/processed/1KGPhase3.chr{chromosome}.hapmap.h2
  phenotype:
    causal_list: data/inputs/processed/Test.CausalList
    reference: data/inputs/processed/Africa.Annot
  software:
    plink: plink
    plink2: plink2
    king: king
    vcftools: vcftools
    mapthin: mapthin
    phenoalg: phenoalg


####################################
# GENOTYPE DATA                    #
####################################

genotype_data:
  filetype: plink # specify either `plink` or `vcf`
  samples:
    use_default: true # setting this to true will ignore the custom settings
    custom:
      - id: examplepop1
        nsamples: 100
        populations: 
          - EUR: 100
      - id: examplepop2
        nsamples: 500
        populations:
          - EUR: 30
          - AFR: 70
    default:
      nsamples: 1000 # only used if not using custom samples
  # recombination rate (default values determined by optimisation procedure)
  rho:
    AFR: 0.01
    AMR: 0.01
    EAS: 0.01
    EUR: 0.01
    SAS: 0.01
  # mean of effective population size (default values determined by optimisation procedure)
  Ne:
    AFR: 2000
    AMR: 2000
    EAS: 2000
    EUR: 2000
    SAS: 2000
  # mutation rate (default values determined by optimisation procedure)
  mu:
    AFR: 0.1
    AMR: 0.1
    EAS: 0.1
    EUR: 0.1
    SAS: 0.1


####################################
# PHENOTYPE DATA                   #
####################################

phenotype_data:
  nPopulation: 2
  nTrait: 2
  a: -0.4
  b: -1
  c: 0.5
  nComponent: 1
  PropotionGeno: 0.2,0.7,0.8,0.2
  PropotionCovar: 0.0,0.0,0.0,0.0
  TraitCorr: 1,-0.7,-0.7,1
  PopulationCorr: 1,0.25,0.25,1
  CompWeight: 1
  Causality:
    UseCausalList: false # if true the algorithm will use the causal_list filepath
    Polygenicity: 0.8,0.8 # only required if UseCausalList is false
    Pleiotropy: 1,1 # only required if UseCausalList is false


####################################
# EVALUATION                       #
####################################

# Set to true if you want the script to calculate the metric
evaluation:
  metrics:
    aats: true  # nearest neighbour adversarial accuracy
    kinship: true # relatedness, including kinship density and IBS plots
    ld_corr: true # linkage disequilibrium (LD) correlation matrix
    ld_decay: true # linkage disequilibrium (LD) decay plot (and distance)
    maf: true # minor allele frequency divergences
    pca: true # principal components analysis
    gwas: true # run GWAS and generate manhattan and qqplot


####################################
# OPTIMISATION                     #
####################################

# Note that this code uses a single superpopulation and ignores custom population structures
optimisation:
  # prior distributions - specify lower/upper bounds for uniform priors
  priors:
    rho:
      uniform_lower: 0
      uniform_upper: 0.1
    Ne:
      uniform_lower: 1000
      uniform_upper: 50000
    mu:
      uniform_lower: 0
      uniform_upper: 10
  # inference type - simulation-based rejection ABC or emulation-based rejection ABC
  simulation_rejection_ABC:
    run: true
    n_particles: 500
    threshold: 0.05
    max_iter: 10
    write_progress: true
  emulation_rejection_ABC:
    run: false
    n_particles: 500
    threshold: 0.05
    n_design_points: 50
    max_iter: 10000
    write_progress: true
  # choice of summary statistic/s
  summary_statistics:
    ld_decay: true
    kinship: true
